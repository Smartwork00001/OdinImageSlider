(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>s});var i=e(537),a=e.n(i),r=e(645),o=e.n(r)()(a());o.push([t.id,"body {\n  background-color: #0284c7;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.image-slider,\n.navigation-slider {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.image.big {\n  min-width: 660px;\n  min-height: 416px;\n  display: flex;\n  justify-content: center;\n}\n.image.big > img {\n  max-width: 660px;\n  max-height: 416px;\n}\n\n.image.small {\n  min-width: 50px;\n  min-height: 50px;\n  display: flex;\n  justify-content: center;\n}\n\n.image.small > img{\n    max-width: 50px;\n    max-width: 50px;\n}\n\n.slide-left-button,\n.slide-right-button {\n  width: 3rem;\n  height: 4rem;\n  font-size: 2rem;\n  color: #0d9488;\n}\n\nimg.navigation:hover{\n  transform: scale(1.2);\n}\n\n.highlight{\n  transform: scale(1.2);\n  border: 1px solid yellow;\n}\n\n.hidden {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,uBAAuB;AACzB;;AAEA;IACI,eAAe;IACf,eAAe;AACnB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,aAAa;AACf",sourcesContent:["body {\n  background-color: #0284c7;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.image-slider,\n.navigation-slider {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.image.big {\n  min-width: 660px;\n  min-height: 416px;\n  display: flex;\n  justify-content: center;\n}\n.image.big > img {\n  max-width: 660px;\n  max-height: 416px;\n}\n\n.image.small {\n  min-width: 50px;\n  min-height: 50px;\n  display: flex;\n  justify-content: center;\n}\n\n.image.small > img{\n    max-width: 50px;\n    max-width: 50px;\n}\n\n.slide-left-button,\n.slide-right-button {\n  width: 3rem;\n  height: 4rem;\n  font-size: 2rem;\n  color: #0d9488;\n}\n\nimg.navigation:hover{\n  transform: scale(1.2);\n}\n\n.highlight{\n  transform: scale(1.2);\n  border: 1px solid yellow;\n}\n\n.hidden {\n  display: none;\n}\n"],sourceRoot:""}]);const s=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",i=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),i&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),i&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,i,a,r){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var l=0;l<t.length;l++){var g=[].concat(t[l]);i&&o[g[0]]||(void 0!==r&&(void 0===g[5]||(g[1]="@layer".concat(g[5].length>0?" ".concat(g[5]):""," {").concat(g[1],"}")),g[5]=r),e&&(g[2]?(g[1]="@media ".concat(g[2]," {").concat(g[1],"}"),g[2]=e):g[2]=e),a&&(g[4]?(g[1]="@supports (".concat(g[4],") {").concat(g[1],"}"),g[4]=a):g[4]="".concat(a)),n.push(g))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,i=0;i<n.length;i++)if(n[i].identifier===t){e=i;break}return e}function i(t,i){for(var r={},o=[],s=0;s<t.length;s++){var c=t[s],l=i.base?c[0]+i.base:c[0],g=r[l]||0,u="".concat(l," ").concat(g);r[l]=g+1;var d=e(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)n[d].references++,n[d].updater(h);else{var m=a(h,i);i.byIndex=s,n.splice(s,0,{identifier:u,updater:m,references:1})}o.push(u)}return o}function a(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,a){var r=i(t=t||[],a=a||{});return function(t){t=t||[];for(var o=0;o<r.length;o++){var s=e(r[o]);n[s].references--}for(var c=i(t,a),l=0;l<r.length;l++){var g=e(r[l]);0===n[g].references&&(n[g].updater(),n.splice(g,1))}r=c}}},569:t=>{var n={};t.exports=function(t,e){var i=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,a&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(i,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(i){var a=n[i];if(void 0!==a)return a.exports;var r=n[i]={id:i,exports:{}};return t[i](r,r.exports,e),r.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),i=e(795),a=e.n(i),r=e(569),o=e.n(r),s=e(565),c=e.n(s),l=e(216),g=e.n(l),u=e(589),d=e.n(u),h=e(426),m={};m.styleTagTransform=d(),m.setAttributes=c(),m.insert=o().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=g(),n()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;const A=function(t){let n=t.getNavigationArr();const e=t.getImageNumber();let i=!1;if(n.forEach((t=>{t===e&&(i=!0)})),!i){t.generateNavigationArr(),n=t.getNavigationArr(),console.log(n[0],n[1],n[2],n[3]);for(let n=t.getImageTotal()-1;n>=0;n-=1){const t=document.querySelector(`.navigation#i${n}`);t.classList.contains("hidden")||t.classList.add("hidden"),t.classList.contains("highlight")&&t.classList.remove("highlight")}for(let t=n.length-1;t>=0;t-=1){const e=document.querySelector(`.navigation#i${n[t]}`);e.classList.contains("hidden")&&e.classList.remove("hidden")}}for(let n=t.getImageTotal()-1;n>=0;n-=1){const t=document.querySelector(`.navigation#i${n}`);t.classList.contains("highlight")&&t.classList.remove("highlight")}const a=document.querySelector(`.navigation#i${t.getImageNumber()}`);a.classList.contains("highlight")||a.classList.add("highlight")},f=document.querySelector(".slide-left-button"),v=document.querySelector(".slide-right-button"),p=document.querySelector(".navigation.slide-right-button"),y=document.querySelector(".navigation.slide-left-button"),b=document.querySelector(".image.small"),E=new class{constructor(){this.imageNumber=1,this.navigationLeft=0,this.navigationRight=3,this.navigationArr=[1,2,3,4],this.imageTotal=18}getNavigationArr(){return this.navigationArr}navigationLeftShift(){for(let t=0;t<this.navigationArr.length;t+=1)this.navigationArr[t]=this.prevOf(this.navigationArr[t])}navigationRightShift(){for(let t=0;t<this.navigationArr.length;t+=1)this.navigationArr[t]=this.nextOf(this.navigationArr[t])}prevOf(t){const n=1*t;return 0===n?this.imageTotal-1:n-1}nextOf(t){const n=1*t;return n===this.imageTotal-1?0:n+1}generateNavigationArr(){this.navigationArr[0]=1*this.imageNumber,this.navigationArr[1]=this.nextOf(this.navigationArr[0]),this.navigationArr[2]=this.nextOf(this.navigationArr[1]),this.navigationArr[3]=this.nextOf(this.navigationArr[2])}getImageNumber(){return this.imageNumber}getImageTotal(){return this.imageTotal}setImageNumber(t){this.imageNumber=t}getPrevImageNumber(){const t=1*this.imageNumber,n=1*this.imageTotal;return 0===t?n-1:t-1}getNextImageNumber(){const t=1*this.imageNumber;return t===1*this.imageTotal-1?0:t+1}getNavigationLeft(){return this.navigationLeft}getNavigationRight(){return this.navigationRight}setNavigationLeft(t){this.navigationLeft=t}setNavigationRight(t){this.navigationRight=t}navigationNext(){this.navigationLeft===this.imageTotal-1?this.navigationLeft=0:this.navigationLeft+=1,this.navigationRight===this.imageTotal-1?this.navigationRight=0:this.navigationRight+=1}navigationPrev(){0===this.navigationLeft?this.navigationLeft=this.imageTotal-1:this.navigationLeft-=1,0===this.navigationRight?this.navigationRight=this.imageTotal-1:this.navigationRight-=1}},x=function(){const t=document.querySelector(`.slide#i${E.getImageNumber()}`),n=E.getNextImageNumber();console.log("nextImganum",n);const e=document.querySelector(`.slide#i${n}`);t.classList.add("hidden"),e.classList.remove("hidden"),E.setImageNumber(n),A(E)},C=function(){const t=document.querySelector(`#i${E.getImageNumber()}`),n=E.getPrevImageNumber(),e=document.querySelector(`#i${n}`);t.classList.add("hidden"),e.classList.remove("hidden"),E.setImageNumber(n),A(E)},B=function(t){t.target.classList.contains("slide-left-button")?C():x()};f.addEventListener("click",B),v.addEventListener("click",B),y.addEventListener("click",B),p.addEventListener("click",B),window.addEventListener("keydown",(function(t){39===t.keyCode?x():37===t.keyCode&&C()})),b.addEventListener("click",(function(t){!function(t){const n=t.split("i"),e=E.getImageNumber(),i=document.querySelector(`.slide#i${e}`),a=document.querySelector(`.slide#${t}`);i.classList.contains("hidden")||i.classList.add("hidden"),a.classList.contains("hidden")&&a.classList.remove("hidden"),E.setImageNumber(n[1]),A(E)}(t.target.closest("img.navigation").getAttribute("id"))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,